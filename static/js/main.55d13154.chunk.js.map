{"version":3,"sources":["components/EventPopper/EventPopperContent.js","components/EventPopper/EventPopper.js","components/Scheduler.js","components/Event.js","components/Slot.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","card","width","borderRadius","title","fontSize","pos","marginBottom","closeButton","position","right","top","zIndex","padding","input","margin","buttonsContainer","justifyContent","cancelButton","color","saveButton","colors","value","label","EventPopperContent","event","onChangeEvent","onClose","isNewEvent","useState","name","setName","start","moment","toDate","date","setDate","desc","notes","setNotes","setColor","nameError","setNameError","notesError","setNotesError","classes","defaultInputProps","required","className","size","InputLabelProps","shrink","Card","variant","CardContent","IconButton","aria-label","onClick","TextField","onChange","e","target","length","error","helperText","utils","DateFnsUtils","format","KeyboardButtonProps","keyboardIcon","ampm","select","style","map","option","MenuItem","key","CardActions","Button","end","add","disabled","isNaN","Date","parse","popper","left","marginTop","height","borderWidth","borderColor","bottom","marginLeft","marginRight","arrow","content","display","borderStyle","EventPopper","id","anchorEl","open","React","arrowRef","setArrowRef","Popper","modifiers","preventOverflow","enabled","boundariesElement","flip","element","ref","localizer","momentLocalizer","Scheduler","events","setEvents","createEvent","concat","changeEvent","index","slice","selectable","defaultDate","defaultView","onEventResize","type","allDay","indexOf","newEvent","onEventDrop","console","log","eventPropGetter","backgroundColor","components","setAnchorEl","Boolean","undefined","togglePopper","currentTarget","Event","bind","dateCellWrapper","children","cloneElement","Children","only","Slot","App","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yYAmBMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,IACPC,aAAc,IAEhBC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,YAAa,CACXC,SAAU,WACVC,MAAO,EACPC,IAAK,GACLC,OAAQ,EACRC,QAAS,GAEXC,MAAO,CACLC,OAAQ,GAEVC,iBAAkB,CAChBC,eAAgB,gBAElBC,aAAc,CACZC,MAAO,WAETC,WAAY,CACVD,MAAO,aAILE,EAAS,CACb,CAAEC,MAAO,YAAaC,MAAO,QAC7B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,WAGb,SAASC,EAAT,GAKX,IAJFC,EAIC,EAJDA,MACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,QACAC,EACC,EADDA,WACC,EACuBC,mBAASJ,EAAMK,MAAQ,cAD9C,mBACMA,EADN,KACYC,EADZ,OAEuBF,mBAASJ,EAAMO,OAASC,MAASC,UAFxD,mBAEMC,EAFN,KAEYC,EAFZ,OAGyBP,mBAASJ,EAAMY,MAAQ,IAHhD,mBAGMC,EAHN,KAGaC,EAHb,OAIyBV,mBAASJ,EAAMN,OAAS,aAJjD,mBAIMA,EAJN,KAIaqB,EAJb,OAKiCX,mBAAS,IAL1C,mBAKMY,EALN,KAKiBC,EALjB,OAMmCb,mBAAS,IAN5C,mBAMMc,EANN,KAMkBC,EANlB,KAOKC,EAAU9C,IAqBV+C,EAAoB,CACxBC,UAAU,EACVC,UAAWH,EAAQ/B,MACnBmC,KAAM,QACNC,gBAAiB,CACfC,QAAQ,IAIZ,OACE,kBAACC,EAAA,EAAD,CAAMJ,UAAWH,EAAQ5C,KAAMoD,QAAQ,YACrC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,aAAW,QACXR,UAAWH,EAAQrC,YACnBiD,QAAS9B,GAET,kBAAC,IAAD,OAEF,kBAAC+B,EAAA,EAAD,iBACMZ,EADN,CAEEvB,MAAM,aACND,MAAOQ,EACP6B,SAAU,SAACC,GACT7B,EAAQ6B,EAAEC,OAAOvC,OACjBoB,EAAuC,IAA1BkB,EAAEC,OAAOvC,MAAMwC,OAAe,oBACrCF,EAAEC,OAAOvC,MAAMwC,OAAS,IAAM,uBAEtCC,QAAStB,EACTuB,WAAYvB,KAEd,kBAAC,IAAD,CAAyBwB,MAAOC,KAC9B,kBAAC,IAAD,iBACMpB,EADN,CAEEvB,MAAM,qBACN4C,OAAO,aACP7C,MAAOa,EACPwB,SAAUvB,EACVgC,oBAAqB,CACnB,aAAc,kBAGlB,kBAAC,IAAD,iBACMtB,EADN,CAEEvB,MAAM,cACND,MAAOa,EACPwB,SAAUvB,EACViC,aAAc,kBAAC,IAAD,MACdC,MAAM,EACNF,oBAAqB,CACnB,aAAc,mBAIpB,kBAACV,EAAA,EAAD,iBACMZ,EADN,CAEEvB,MAAM,QACND,MAAOgB,EACPqB,SAAU,SAACC,GACTrB,EAASqB,EAAEC,OAAOvC,OAClBsB,EAAwC,IAA1BgB,EAAEC,OAAOvC,MAAMwC,QAAgB,sBAE/CC,QAASpB,EACTqB,WAAYrB,KAEd,kBAACe,EAAA,EAAD,iBACMZ,EADN,CAEEyB,QAAM,EACNhD,MAAM,QACND,MAAOH,EACPwC,SAAU,SAACC,GAAD,OAAOpB,EAASoB,EAAEC,OAAOvC,QACnCkD,MAAO,CAAEtE,MAAO,WAEfmB,EAAOoD,KAAI,SAACC,GAAD,OACV,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOpD,MAAOA,MAAOoD,EAAOpD,OACxCoD,EAAOnD,YAKhB,kBAACsD,EAAA,EAAD,CAAa7B,UAAWH,EAAQ7B,kBAC9B,kBAAC8D,EAAA,EAAD,CACE9B,UAAWH,EAAQ3B,aACnB+B,KAAK,QACLQ,QAAS7B,EAAaD,EAxFR,WACpBD,EAAc,QAyFPE,EAAa,SAAW,WAE3B,kBAACkD,EAAA,EAAD,CACE9B,UAAWH,EAAQzB,WACnB6B,KAAK,QACLQ,QA9GW,WACZnB,EAKLZ,EAAc,CACZM,MAAOG,EACP4C,IAAK9C,IAAOE,GAAM6C,IAAI,EAAG,QAAQ9C,SACjC9B,MAAO0B,EACPO,KAAMC,EACNnB,UATAyB,EAAc,sBA6GVqC,WAAYxC,KAAeE,GAAcuC,MAAMC,KAAKC,MAAMjD,KAEzDP,EAAa,OAAS,UCpLjC,IAAM7B,EAAYC,YAAW,CAC3BqF,OAAQ,CACNzE,OAAQ,EACR,kCAAmC,CACjCD,IAAK,EACL2E,KAAM,EACNC,UAAW,SACXrF,MAAO,MACPsF,OAAQ,MACR,YAAa,CACXC,YAAa,gBACbC,YAAY,gDAGhB,+BAAgC,CAC9BC,OAAQ,EACRL,KAAM,EACN/E,aAAc,SACdL,MAAO,MACPsF,OAAQ,MACR,YAAa,CACXC,YAAa,gBACbC,YAAY,gDAGhB,iCAAkC,CAChCJ,KAAM,EACNM,WAAY,SACZJ,OAAQ,MACRtF,MAAO,MACP,YAAa,CACXuF,YAAa,gBACbC,YAAY,gDAGhB,gCAAiC,CAC/BhF,MAAO,EACPmF,YAAa,SACbL,OAAQ,MACRtF,MAAO,MACP,YAAa,CACXuF,YAAa,gBACbC,YAAY,iDAIlBI,MAAO,CACLrF,SAAU,WACVJ,SAAU,EACVH,MAAO,MACPsF,OAAQ,MACR,YAAa,CACXO,QAAS,KACThF,OAAQ,OACRiF,QAAS,QACT9F,MAAO,EACPsF,OAAQ,EACRS,YAAa,YAKJ,SAASC,EAAT,GAQX,IAPFzE,EAOC,EAPDA,MACA0E,EAMC,EANDA,GACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,KACA1E,EAGC,EAHDA,QACAD,EAEC,EAFDA,cACAE,EACC,EADDA,WACC,EAC+B0E,IAAMzE,SAAS,MAD9C,mBACM0E,EADN,KACgBC,EADhB,KAEK3D,EAAU9C,IAEhB,OACE,kBAAC0G,EAAA,EAAD,CACEzD,UAAWH,EAAQwC,OACnBc,GAAIA,EACJE,KAAMA,EACND,SAAUA,EACVM,UAAW,CACTC,gBAAiB,CACfC,SAAS,EACTC,kBAAmB,gBAErBC,KAAM,CACJF,SAAS,GAEXd,MAAO,CACLc,SAAS,EACTG,QAASR,KAIb,0BAAMvD,UAAWH,EAAQiD,MAAOkB,IAAKR,IACrC,kBAAChF,EAAD,CACEC,MAAOA,EACPoB,QAASA,EACTnB,cAAeA,EACfC,QAASA,EACTC,WAAYA,K,WCjGdqF,EAAYC,YAAgBjF,KAEnB,SAASkF,IAAa,IAAD,EACNtF,mBAAS,CACnC,CACEG,MAAOC,MAASC,SAChB6C,IAAK9C,MAAS+C,IAAI,EAAG,QAAQ9C,SAC7B9B,MAAO,aACPiC,KAAM,QACNlB,MAAO,eAPuB,mBAC3BiG,EAD2B,KACnBC,EADmB,KAW5BC,EAAc,SAAC7F,GACnB4F,EAAUD,EAAOG,OAAO9F,KAGpB+F,EAAc,SAACC,EAAOhG,GAExB4F,EADI5F,EAEF,GAAG8F,OAAOH,EAAOM,MAAM,EAAGD,GAAQhG,EAAO2F,EAAOM,MAAMD,EAAQ,IAGtD,GAAGF,OAAOH,EAAOM,MAAM,EAAGD,GAAQL,EAAOM,MAAMD,EAAQ,MAcrE,OACE,kBAAC,IAAD,CACEE,YAAU,EACVC,YAAa3F,MAASC,SACtB2F,YAAY,QACZT,OAAQA,EACRH,UAAWA,EACXzC,MAAO,CAAEgB,OAAQ,SACjBsC,cAlBkB,SAACC,EAAD,GAA0C,IAAjCtG,EAAgC,EAAhCA,MAAOO,EAAyB,EAAzBA,MAAO+C,EAAkB,EAAlBA,IACrC0C,GADuD,EAAbO,OAClCvG,EAAMwG,QAAQxG,IACtByG,EAAQ,2BAAQzG,GAAR,IAAeO,MAAOA,EAAO+C,IAAKA,IAChDsC,EAAU,GAAGE,OAAOH,EAAOM,MAAM,EAAGD,GAAQS,EAAUd,EAAOM,MAAMD,EAAQ,MAgBzEU,YAbgB,SAAC,GAAkC,EAAhC1G,MAAiC,IAA1BO,EAAyB,EAAzBA,MAAyB,EAAlB+C,IAAkB,EAAbiD,OACxCI,QAAQC,IAAIrG,IAaVsG,gBAAiB,SAAC7G,GAChB,MAAO,CACL+C,MAAO,CACL+D,gBAAiB9G,EAAMN,OAAS,eAItCqH,WAAY,CACV/G,MAAO,gBAAGA,EAAH,EAAGA,MAAH,OC5DA,YAAwC,IAAvBA,EAAsB,EAAtBA,MAAO+F,EAAe,EAAfA,YAAe,EACpBlB,IAAMzE,SAAS,MADK,mBAC7CuE,EAD6C,KACnCqC,EADmC,KAE9CpC,EAAOqC,QAAQtC,GACfD,EAAKE,EAAO,oBAAiBsC,EAE7BC,EAAe,SAACnH,GACpBgH,EAAYrC,EAAW,KAAO3E,EAAMoH,gBAGtC,OACE,oCACE,yBAAKpF,QAASmF,GACZ,gCAASnH,EAAMrB,OACdqB,EAAMY,MAAQ,MAAQZ,EAAMY,MAE/B,kBAAC6D,EAAD,CACEzE,MAAOA,EACP0E,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACN1E,QAASiH,EACTlH,cAAe8F,KDwCbsB,CAAM,CACJrH,QACA+F,YAAaA,EAAYuB,KAAK,KAAM3B,EAAOa,QAAQxG,OAEvDuH,gBAAiB,mBEjEV,YAAiD,IAAjCC,EAAgC,EAAhCA,SAAU3H,EAAsB,EAAtBA,MAAOgG,EAAe,EAAfA,YAAe,EAC7BhB,IAAMzE,SAAS,MADc,mBACtDuE,EADsD,KAC5CqC,EAD4C,KAEvDpC,EAAOqC,QAAQtC,GACfD,EAAKE,EAAO,oBAAiBsC,EAE7BC,EAAe,SAACnH,GACpBgH,EAAYrC,EAAW,KAAO3E,EAAMoH,gBAGtC,OACE,oCACGvC,IAAM4C,aAAaC,WAASC,KAAKH,GAAW,CAAExF,QAASmF,IACxD,kBAAC1C,EAAD,CACEzE,MAAO,CAAEO,MAAOV,GAChB6E,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACN1E,QAASiH,EACTlH,cAAe4F,EACf1F,YAAU,KF+CRyH,CAAK,CAAEJ,SADQ,EAAGA,SACD3H,MADF,EAAaA,MACJgG,oBGlEnB,SAASgC,IACtB,OACE,yBAAKtG,UAAU,OACb,kBAACmE,EAAD,OCIN,IAAMoC,EAAcb,QACW,cAA7Bc,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BpC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBoC,OAAM,SAAA1G,GACLqE,QAAQrE,MAAM,4CAA6CA,MCzEjE2G,IAASC,OAAO,kBAACrB,EAAD,MAASsB,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,uBAAwBvB,OAAOC,UAC3CuB,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,uBAAN,sBAEPxB,IAiDV,SAAiCM,GAE/BqB,MAAMrB,GACHI,MAAK,SAAAkB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBrD,QAAQ,cAG7C6B,UAAUC,cAAcwB,MAAMtB,MAAK,SAAAC,GACjCA,EAAasB,aAAavB,MAAK,WAC7BT,OAAOC,SAASgC,eAKpB7B,EAAgBC,MAGnBY,OAAM,WACLrC,QAAQC,IACN,oEArEAqD,CAAwB7B,GAIxBC,UAAUC,cAAcwB,MAAMtB,MAAK,WACjC7B,QAAQC,IACN,gHAMJuB,EAAgBC,OCzCxB8B,K","file":"static/js/main.55d13154.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 225,\n    borderRadius: 10,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: 5,\n    top: 15,\n    zIndex: 6,\n    padding: 5,\n  },\n  input: {\n    margin: 7,\n  },\n  buttonsContainer: {\n    justifyContent: \"space-around\",\n  },\n  cancelButton: {\n    color: \"#FF5F5F\",\n  },\n  saveButton: {\n    color: \"#6A6996\",\n  },\n});\n\nconst colors = [\n  { value: \"royalblue\", label: \"blue\" },\n  { value: \"green\", label: \"green\" },\n  { value: \"purple\", label: \"purple\" },\n  { value: \"orange\", label: \"orange\" },\n];\n\nexport default function EventPopperContent({\n  event,\n  onChangeEvent,\n  onClose,\n  isNewEvent,\n}) {\n  const [name, setName] = useState(event.name || \"Event name\");\n  const [date, setDate] = useState(event.start || moment().toDate());\n  const [notes, setNotes] = useState(event.desc || \"\");\n  const [color, setColor] = useState(event.color || \"royalblue\");\n  const [nameError, setNameError] = useState(\"\");\n  const [notesError, setNotesError] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSave = () => {\n    if (!notes) {\n      setNotesError(\"Field is required\");\n      return;\n    }\n\n    onChangeEvent({\n      start: date,\n      end: moment(date).add(3, \"hour\").toDate(),\n      title: name,\n      desc: notes,\n      color,\n    });\n  };\n\n  const handleDiscard = () => {\n    onChangeEvent(null);\n  };\n\n  const defaultInputProps = {\n    required: true,\n    className: classes.input,\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n\n  return (\n    <Card className={classes.card} variant=\"outlined\">\n      <CardContent>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <HighlightOffOutlinedIcon />\n        </IconButton>\n        <TextField\n          {...defaultInputProps}\n          label=\"event name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n            setNameError(e.target.value.length === 0 ? \"Field is required\"\n                : e.target.value.length > 30 && \"More than 30 chars\");\n          }}\n          error={!!nameError}\n          helperText={nameError}\n        />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            {...defaultInputProps}\n            label=\"Date picker dialog\"\n            format=\"dd/MM/yyyy\"\n            value={date}\n            onChange={setDate}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n          <KeyboardTimePicker\n            {...defaultInputProps}\n            label=\"Time picker\"\n            value={date}\n            onChange={setDate}\n            keyboardIcon={<AccessTimeIcon />}\n            ampm={false}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change time\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n        <TextField\n          {...defaultInputProps}\n          label=\"notes\"\n          value={notes}\n          onChange={(e) => {\n            setNotes(e.target.value);\n            setNotesError(e.target.value.length === 0 && \"Field is required\");\n          }}\n          error={!!notesError}\n          helperText={notesError}\n        />\n        <TextField\n          {...defaultInputProps}\n          select\n          label=\"color\"\n          value={color}\n          onChange={(e) => setColor(e.target.value)}\n          style={{ width: \"92.5%\" }}\n        >\n          {colors.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </CardContent>\n      <CardActions className={classes.buttonsContainer}>\n        <Button\n          className={classes.cancelButton}\n          size=\"small\"\n          onClick={isNewEvent ? onClose : handleDiscard}\n        >\n          {isNewEvent ? \"Cancel\" : \"DISCARD\"}\n        </Button>\n        <Button\n          className={classes.saveButton}\n          size=\"small\"\n          onClick={handleSave}\n          disabled={!!nameError || !!notesError || isNaN(Date.parse(date))}\n        >\n          {isNewEvent ? \"Save\" : \"EDIT\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EventPopperContent from \"./EventPopperContent\";\n\nconst useStyles = makeStyles({\n  popper: {\n    zIndex: 5,\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: \"-0.9em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"0 1em 1em 1em\",\n        borderColor: `transparent transparent #bbbbbb transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: \"-0.9em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 0 1em\",\n        borderColor: `#bbbbbb transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent #bbbbbb transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent #bbbbbb`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n});\n\nexport default function EventPopper({\n  event,\n  id,\n  anchorEl,\n  open,\n  onClose,\n  onChangeEvent,\n  isNewEvent,\n}) {\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const classes = useStyles();\n\n  return (\n    <Popper\n      className={classes.popper}\n      id={id}\n      open={open}\n      anchorEl={anchorEl}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          boundariesElement: \"scrollParent\",\n        },\n        flip: {\n          enabled: true,\n        },\n        arrow: {\n          enabled: true,\n          element: arrowRef,\n        },\n      }}\n    >\n      <span className={classes.arrow} ref={setArrowRef} />\n      <EventPopperContent\n        event={event}\n        classes={classes}\n        onChangeEvent={onChangeEvent}\n        onClose={onClose}\n        isNewEvent={isNewEvent}\n      />\n    </Popper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport Event from \"./Event\";\nimport Slot from \"./Slot\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment);\n\nexport default function Scheduler() {\n  const [events, setEvents] = useState([\n    {\n      start: moment().toDate(),\n      end: moment().add(3, \"hour\").toDate(),\n      title: \"Event name\",\n      desc: \"notes\",\n      color: \"royalblue\",\n    },\n  ]);\n\n  const createEvent = (event) => {\n    setEvents(events.concat(event));\n  };\n\n  const changeEvent = (index, event) => {\n    if (!!event) {\n      setEvents(\n        [].concat(events.slice(0, index), event, events.slice(index + 1))\n      );\n    } else {\n      setEvents([].concat(events.slice(0, index), events.slice(index + 1)));\n    }\n  };\n\n  const onEventResize = (type, { event, start, end, allDay }) => {\n    const index = event.indexOf(event);\n    const newEvent = { ...event, start: start, end: end };\n    setEvents([].concat(events.slice(0, index), newEvent, events.slice(index + 1)));\n  };\n\n  const onEventDrop = ({ event, start, end, allDay }) => {\n    console.log(start);\n  };\n\n  return (\n    <Calendar\n      selectable\n      defaultDate={moment().toDate()}\n      defaultView=\"month\"\n      events={events}\n      localizer={localizer}\n      style={{ height: \"100vh\" }}\n      onEventResize={onEventResize}\n      onEventDrop={onEventDrop}\n      eventPropGetter={(event) => {\n        return {\n          style: {\n            backgroundColor: event.color || \"royalblue\",\n          },\n        };\n      }}\n      components={{\n        event: ({ event }) =>\n          Event({\n            event,\n            changeEvent: changeEvent.bind(null, events.indexOf(event)),\n          }),\n        dateCellWrapper: ({ children, value }) =>\n          Slot({ children, value, createEvent }),\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport EventPopper from \"./EventPopper/EventPopper\";\n\nexport default function Event({ event, changeEvent }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? \"event-popper\" : undefined;\n\n  const togglePopper = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  return (\n    <>\n      <div onClick={togglePopper}>\n        <strong>{event.title}</strong>\n        {event.desc && \":  \" + event.desc}\n      </div>\n      <EventPopper\n        event={event}\n        id={id}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={togglePopper}\n        onChangeEvent={changeEvent}\n      />\n    </>\n  );\n}\n","import React, { Children } from \"react\";\nimport EventPopper from \"./EventPopper/EventPopper\";\n\nexport default function Slot({ children, value, createEvent }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const id = open ? \"event-popper\" : undefined;\n\n  const togglePopper = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  return (\n    <>\n      {React.cloneElement(Children.only(children), { onClick: togglePopper })}\n      <EventPopper\n        event={{ start: value }}\n        id={id}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={togglePopper}\n        onChangeEvent={createEvent}\n        isNewEvent\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport Scheduler from \"./components/Scheduler\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Scheduler />\n    </div>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}